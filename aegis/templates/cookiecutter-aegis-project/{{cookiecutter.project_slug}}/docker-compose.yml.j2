
x-app: &app
  image: ${AEGIS_STACK_TAG:-aegis-stack:latest}
  build:
    context: .
    args:
      - AEGIS_STACK_VERSION=${AEGIS_STACK_VERSION:-dev}
      - PORT=${PORT:-8000}
  env_file:
    - ${AEGIS_STACK_ENV_FILE:-.env}
  volumes:
    - .:/code
    # Exclude .venv to prevent host/container virtual environment conflicts
    - /code/.venv
  environment:
    # Docker container marker for entrypoint script
    - DOCKER_CONTAINER=1
    - PORT=${PORT:-8000}
  labels:
    logging: "aegis-stack"

services:
  # DEVELOPMENT PROFILE

  webserver:
    <<: *app
    command:
      - webserver
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    profiles:
      - dev

{% if cookiecutter.include_scheduler == "yes" %}
  # Scheduler service (runs scheduler tasks independently)
  scheduler:
    <<: *app
    command:
      - scheduler
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    profiles:
      - dev
      - prod
{% endif %}

  # REDIS SERVICE
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    profiles:
      - dev

  # TEST PROFILE

  test_runner:
    <<: *app
    command:
      - test
    env_file:
      - ${AEGIS_STACK_ENV_FILE:-.env}
    profiles:
      - test

volumes:
  aegis-data: