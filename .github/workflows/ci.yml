name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run linting
      run: uv run ruff check .

  typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run type checking
      run: uv run mypy .

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run tests
      run: uv run pytest -v

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t aegis-stack:test .
    
    - name: Test Docker container
      run: |
        # Start container in background
        docker run -d --name aegis-test -p 8000:8000 aegis-stack:test webserver
        
        # Wait for container to be ready with retry logic
        echo "Waiting for container to be ready..."
        for i in {1..15}; do
          if curl -sf http://localhost:8000/health > /dev/null 2>&1; then
            echo "Container is ready!"
            break
          fi
          if [ $i -eq 15 ]; then
            echo "Container failed to start after 15 attempts"
            echo "Container logs:"
            docker logs aegis-test
            echo "Container status:"
            docker ps -a | grep aegis-test
            exit 1
          fi
          echo "Attempt $i/15 - waiting..."
          sleep 3
        done
        
        # Test health endpoint one more time to be sure
        curl -f http://localhost:8000/health
        
        # Clean up
        docker stop aegis-test
        docker rm aegis-test